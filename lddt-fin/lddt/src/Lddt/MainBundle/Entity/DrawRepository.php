<?php

namespace Lddt\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DrawRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DrawRepository extends EntityRepository
{

    public function findAllDraws(){
        // Native Sql
        $query = $this->getEntityManager()->createQuery(
        'SELECT d,c,u FROM LddtMainBundle:Draw AS d JOIN d.category AS c JOIN d.user AS u'
        );

        return $query->getResult();
    }

    public function findAllDrawsByCat($cat) {
        // QueryBuilder
        $q = $this->createQueryBuilder('d')
                    ->where('d.category = :cat')
                    ->andWhere('d.isOnline = true')
                    ->join('d.category','c')
                     ->join('d.user','u')
                    ->setParameter('cat',$cat)
                    ->addSelect('c,u')
        ;
        return $q->getQuery()->getResult();

    }

    public function findAllDrawsByAuthor($author) {
        $q = $this->createQueryBuilder('d')
                  ->join('d.category','c')
                  ->join('d.user','u')
                  ->where('d.user = :author')
                  ->setParameter('author',$author)
                  ->addSelect('c,u');
        return $q->getQuery()->getResult();
    }


    // RequÃªte pour association ManyToMany
    public function findAllDrawsByColor(array $colors) {
        $q = $this->createQueryBuilder('d');
         $q->join('d.colors','c')
           ->join('d.category','cat')
            ->join('d.user','u')
           ->where($q->expr()->in('c.name',$colors))
           ->addSelect('c,cat,u');

        return $q->getQuery()->getResult();

    }
}
